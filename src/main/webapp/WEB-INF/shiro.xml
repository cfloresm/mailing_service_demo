<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
        
<bean id="shiroFilter"
        class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <property name="loginUrl" value="/login" />
        <property name="successUrl" value="/home" />
        <!-- override these for application-specific URLs if you like: <property 
            name="loginUrl" value="/login.jsp"/> <property name="successUrl" value="/home.jsp"/> 
            <property name="unauthorizedUrl" value="/unauthorized.jsp"/> -->
        <!-- The 'filters' property is not necessary since any declared javax.servlet.Filter 
            bean -->
        <!-- defined will be automatically acquired and available via its beanName 
            in chain -->
        <!-- definitions, but you can perform instance overrides or name aliases 
            here if you like: -->
        <!-- <property name="filters"> <util:map> <entry key="anAlias" value-ref="someFilter"/> 
            </util:map> </property> -->
        <property name="filterChainDefinitions">
            <value>
                /authenticate = anon
                /api/sendmail = anon
                /signin = anon
            	/resources/** = anon
            	/images/** = anon
                /keystores = anon
                /keystores/** = anon     
                /authentication/** = anon
                /js/** = anon
                /css/** = anon
                /company/** = anon           
                /** = authc
                <!-- # some example chain definitions: /admin/** = authc, roles[admin] 
                    /docs/** = authc, perms[document:read] /** = authc # more URL-to-FilterChain 
                    definitions here -->
            </value>
        </property>
    </bean>

    <!-- Define any javax.servlet.Filter beans you want anywhere in this application 
        context. -->
    <!-- They will automatically be acquired by the 'shiroFilter' bean above 
        and made available -->
    <!-- to the 'filterChainDefinitions' property. Or you can manually/explicitly 
        add them -->
    <!-- to the shiroFilter's 'filters' Map if desired. See its JavaDoc for 
        more details. -->
    <!-- <bean id="someFilter" class="..." /> <bean id="anotherFilter" class="..."></bean> -->



    <bean id="securityManager"
        class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- Single realm app. If you have multiple realms, use the 'realms' property 
            instead. -->
        <property name="realm" ref="backCustomRealm" />
        <!-- By default the servlet container sessions will be used. Uncomment 
            this line to use shiro's native sessions (see the JavaDoc for more): -->
        <!-- property name="sessionMode" value="native" /-->
        <property name="sessionManager" ref="sessionManager" />
    </bean>


    <bean id="lifecycleBeanPostProcessor"
        class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

   <bean id="backCustomRealm" class="mx.com.prosa.app.mail.security.BankingRealm" />
    
   <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO" />
 
   <bean id="sessionManager"
        class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="sessionDAO" />
        <!-- 10 minutes = 600000 and default is 30 mins
         -->
        <property name="globalSessionTimeout" value="630000" />
        <property name="sessionListeners">
            <list>
                <ref bean="customSessionListener" />
            </list>
        </property>
    </bean>
    
   
    <bean id="customSessionListener" class="mx.com.prosa.app.mail.security.CustomSessionListener" />
 </beans>
